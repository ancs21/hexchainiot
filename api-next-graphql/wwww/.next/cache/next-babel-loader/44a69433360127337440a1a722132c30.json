{"ast":null,"code":"import React, { useState, useEffect, useContext, createContext } from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Cookies from 'js-cookie';\nconst config = {\n  apiKey: 'AIzaSyBtAOTryp1Fmv93HM1qR6j62UNkyfs7aqU',\n  authDomain: 'hexchainiot.firebaseapp.com',\n  databaseURL: 'https://hexchainiot.firebaseio.com',\n  projectId: 'hexchainiot',\n  storageBucket: '',\n  messagingSenderId: '581192912622',\n  appId: '1:581192912622:web:5708ef67b226104c'\n};\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\nconst authContext = createContext();\nexport function ProvideAuth({\n  children\n}) {\n  const auth = useProvideAuth();\n  return React.createElement(authContext.Provider, {\n    value: auth\n  }, children);\n}\nexport const useAuth = () => {\n  return useContext(authContext);\n};\nexport { firebase };\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  const signout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n      localStorage.removeItem('token');\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(async user => {\n      if (user) {\n        setUser(user);\n        localStorage.setItem('token', (await firebase.auth().currentUser.getIdToken(\n        /* forceRefresh */\n        true)));\n        Cookies.set('token', (await firebase.auth().currentUser.getIdToken(\n        /* forceRefresh */\n        true)));\n        setLoading(false);\n      } else {\n        setUser(false);\n        setLoading(false);\n      }\n    }); // Cleanup subscription on unmount\n\n    return () => unsubscribe();\n  }, []); // Return the user object and auth methods\n\n  return {\n    user,\n    isLoading,\n    signout\n  };\n}","map":{"version":3,"sources":["/home/xadmin/Desktop/hexchain/hexchainiot/api-next-graphql/wwww/components/use-auth.js"],"names":["React","useState","useEffect","useContext","createContext","firebase","Cookies","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","app","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","user","setUser","isLoading","setLoading","signout","signOut","then","localStorage","removeItem","unsubscribe","onAuthStateChanged","setItem","currentUser","getIdToken","set"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6BAFC;AAGbC,EAAAA,WAAW,EAAE,oCAHA;AAIbC,EAAAA,SAAS,EAAE,aAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AASA,CAACT,QAAQ,CAACU,IAAT,CAAcC,MAAf,GAAwBX,QAAQ,CAACY,aAAT,CAAuBV,MAAvB,CAAxB,GAAyDF,QAAQ,CAACa,GAAT,EAAzD;AAEA,MAAMC,WAAW,GAAGf,aAAa,EAAjC;AAEA,OAAO,SAASgB,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AACxC,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,SAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED;AAA7B,KAAoCD,QAApC,CAAP;AACD;AAED,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAOrB,UAAU,CAACgB,WAAD,CAAjB;AACD,CAFM;AAIP,SAASd,QAAT;;AAEA,SAASkB,cAAT,GAA0B;AACxB,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAC0B,SAAD,EAAYC,UAAZ,IAA0B3B,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAM4B,OAAO,GAAG,MAAM;AACpB,WAAOxB,QAAQ,CACZiB,IADI,GAEJQ,OAFI,GAGJC,IAHI,CAGC,MAAM;AACVL,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAM,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD,KANI,CAAP;AAOD,GARD;;AAUA/B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgC,WAAW,GAAG7B,QAAQ,CAACiB,IAAT,GAAgBa,kBAAhB,CAAmC,MAAMV,IAAN,IAAc;AACnE,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAO,QAAAA,YAAY,CAACI,OAAb,CACE,OADF,GAEE,MAAM/B,QAAQ,CAACiB,IAAT,GAAgBe,WAAhB,CAA4BC,UAA5B;AAAuC;AAAmB,YAA1D,CAFR;AAIAhC,QAAAA,OAAO,CAACiC,GAAR,CACE,OADF,GAEE,MAAMlC,QAAQ,CAACiB,IAAT,GAAgBe,WAAhB,CAA4BC,UAA5B;AAAuC;AAAmB,YAA1D,CAFR;AAIAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAXD,MAWO;AACLF,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAhBmB,CAApB,CADc,CAmBd;;AACA,WAAO,MAAMM,WAAW,EAAxB;AACD,GArBQ,EAqBN,EArBM,CAAT,CAbwB,CAoCxB;;AACA,SAAO;AACLT,IAAAA,IADK;AAELE,IAAAA,SAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport Cookies from 'js-cookie'\n\nconst config = {\n  apiKey: 'AIzaSyBtAOTryp1Fmv93HM1qR6j62UNkyfs7aqU',\n  authDomain: 'hexchainiot.firebaseapp.com',\n  databaseURL: 'https://hexchainiot.firebaseio.com',\n  projectId: 'hexchainiot',\n  storageBucket: '',\n  messagingSenderId: '581192912622',\n  appId: '1:581192912622:web:5708ef67b226104c'\n}\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app()\n\nconst authContext = createContext()\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth()\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport const useAuth = () => {\n  return useContext(authContext)\n}\n\nexport { firebase }\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null)\n  const [isLoading, setLoading] = useState(true)\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false)\n        localStorage.removeItem('token')\n      })\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(async user => {\n      if (user) {\n        setUser(user)\n        localStorage.setItem(\n          'token',\n          await firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\n        )\n        Cookies.set(\n          'token',\n          await firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\n        )\n        setLoading(false)\n      } else {\n        setUser(false)\n        setLoading(false)\n      }\n    })\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe()\n  }, [])\n\n  // Return the user object and auth methods\n  return {\n    user,\n    isLoading,\n    signout\n  }\n}\n"]},"metadata":{},"sourceType":"module"}