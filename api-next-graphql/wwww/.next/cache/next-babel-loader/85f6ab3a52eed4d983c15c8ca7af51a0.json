{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/styles'; // import theme from '../src/theme'\n\nclass MyDocument extends Document {\n  render() {\n    return React.createElement(\"html\", {\n      lang: \"en\"\n    }, React.createElement(Head, null, React.createElement(\"meta\", {\n      charSet: \"utf-8\"\n    }), React.createElement(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n    }), React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    })), React.createElement(\"body\", null, React.createElement(Main, null), React.createElement(NextScript, null)));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(React.createElement(App, props))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    styles: [React.createElement(React.Fragment, {\n      key: \"styles\"\n    }, initialProps.styles, sheets.getStyleElement())]\n  });\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["/home/xadmin/Desktop/hexchain/hexchainiot/api-next-graphql/wwww/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","MyDocument","render","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","getStyleElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,qBAAlC,C,CACA;;AAEA,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAChCM,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,oBAAC,IAAD,QACE;AAAM,MAAA,OAAO,EAAC;AAAd,MADF,EAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC;AAFV,MAHF,EASE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC;AAFP,MATF,CADF,EAeE,kCACE,oBAAC,IAAD,OADF,EAEE,oBAAC,UAAD,OAFF,CAfF,CADF;AAsBD;;AAxB+B;;AA2BlCD,UAAU,CAACE,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACxC,QAAMC,MAAM,GAAG,IAAIL,iBAAJ,EAAf;AACA,QAAMM,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,MAAM,CAACM,OAAP,CAAe,oBAAC,GAAD,EAASD,KAAT,CAAf;AADX,GAAD,CADpB;;AAKA,QAAME,YAAY,GAAG,MAAMhB,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACKQ,YADL;AAEEC,IAAAA,MAAM,EAAE,CACN,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAC;AAApB,OACGD,YAAY,CAACC,MADhB,EAEGR,MAAM,CAACS,eAAP,EAFH,CADM;AAFV;AASD,CApBD;;AAsBA,eAAeb,UAAf","sourcesContent":["import React from 'react'\nimport Document, { Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheets } from '@material-ui/styles'\n// import theme from '../src/theme'\n\nclass MyDocument extends Document {\n  render() {\n    return (\n      <html lang=\"en\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          {/* Use minimum-scale=1 to enable GPU rasterization */}\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n          />\n          {/* PWA primary color */}\n          {/* <meta name=\"theme-color\" content={theme.palette.primary.main} /> */}\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const sheets = new ServerStyleSheets()\n  const originalRenderPage = ctx.renderPage\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: App => props => sheets.collect(<App {...props} />)\n    })\n\n  const initialProps = await Document.getInitialProps(ctx)\n\n  return {\n    ...initialProps,\n    styles: [\n      <React.Fragment key=\"styles\">\n        {initialProps.styles}\n        {sheets.getStyleElement()}\n      </React.Fragment>\n    ]\n  }\n}\n\nexport default MyDocument\n"]},"metadata":{},"sourceType":"module"}